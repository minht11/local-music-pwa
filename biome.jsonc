{
	"$schema": "./node_modules/@biomejs/biome/configuration_schema.json",
	"vcs": {
		"enabled": true,
		"clientKind": "git",
		"defaultBranch": "main",
		"useIgnoreFile": true
	},
	"assist": {
		"actions": {
			"source": {
				"organizeImports": {
					"level": "on",
					"options": {
						"groups": [
							":URL:",
							":NODE:",
							":PACKAGE:",
							":PACKAGE_WITH_PROTOCOL:",
							"$app/**",
							"$server/**",
							"$lib/**",
							":ALIAS:",
							":PATH:"
						]
					}
				}
			}
		}
	},
	"files": {
		"includes": [
			"**",
			"!**/.generated",
			// Biome does not support Tailwind syntax yet.
			"!**/*.css",
			// Biome parser incorrectly errors on TS syntax.
			"!src/lib/components/WrapTranslation.svelte",
			"!build/",
			"!coverage/"
		]
	},
	"formatter": {
		"enabled": true,
		"lineWidth": 100,
		"includes": ["**", "!**/*.svelte", "**/*.svelte.ts"]
	},
	"linter": {
		"enabled": true,
		"domains": {
			"project": "recommended"
		},
		"rules": {
			"style": {
				"noNegationElse": "error",
				"useBlockStatements": "error",
				"useCollapsedElseIf": "error",
				"useConsistentArrayType": {
					"level": "error",
					"options": {
						"syntax": "shorthand"
					}
				},
				"useShorthandAssign": "error",
				"useFilenamingConvention": {
					"level": "error",
					"options": {
						"requireAscii": true,
						"filenameCases": ["kebab-case", "export", "PascalCase"]
					}
				},
				"useThrowNewError": "error",
				"useThrowOnlyError": "error",
				"useConsistentBuiltinInstantiation": "error",
				"useLiteralEnumMembers": "error",
				"useNodejsImportProtocol": "error",
				"useAsConstAssertion": "error",
				"useEnumInitializers": "error",
				"useSelfClosingElements": "error",
				"useSingleVarDeclarator": "error",
				"noUnusedTemplateLiteral": "error",
				"useNumberNamespace": "error",
				"noInferrableTypes": "error",
				"useExponentiationOperator": "error",
				"useTemplate": "error",
				"noParameterAssign": "error",
				"noNonNullAssertion": "error",
				"useDefaultParameterLast": "error",
				"useExportType": "error",
				"noUselessElse": "error",
				"useShorthandFunctionType": "error",
				"noRestrictedImports": {
					"level": "error",
					"options": {
						"paths": {
							"@material/material-color-utilities": "Should not be used directly except in specific theme entrypoints to avoid breaking making big chunks"
						}
					}
				},
				"useConsistentObjectDefinitions": "error"
			},
			"correctness": {
				"noUndeclaredVariables": "error",
				"useImportExtensions": "error",
				"noPrivateImports": {
					"level": "error",
					"options": {
						"defaultVisibility": "package"
					}
				},
				"useSingleJsDocAsterisk": "error"
			},
			"nursery": {
				"noFloatingPromises": "error",
				"noImportCycles": "error",
				"noMisusedPromises": "error"
			},
			"complexity": {
				"useSimplifiedLogicExpression": "error",
				"useNumericLiterals": "error",
				"noCommaOperator": "error"
			},
			"suspicious": {
				"useAwait": "error",
				"useErrorMessage": "error",
				"noConsole": {
					"level": "error",
					"options": {
						"allow": ["assert", "error", "info", "warn", "time", "timeEnd", "debug"]
					}
				}
			}
		}
	},
	"javascript": {
		"formatter": {
			"semicolons": "asNeeded",
			"quoteStyle": "single",
			"jsxQuoteStyle": "single",
			"indentWidth": 4
		},
		"globals": ["m", "invariant", "usePlayer", "useMainStore"]
	},
	"json": {
		"formatter": {
			"indentWidth": 2
		}
	},
	"overrides": [
		{
			"includes": ["**/*.svelte", "!**/*.svelte.ts"],
			"linter": {
				"rules": {
					"style": {
						"useConst": "off",
						"useImportType": "off"
					},
					"correctness": {
						"noUndeclaredVariables": "off",
						"noUnusedVariables": "off",
						"noUnusedImports": "off",
						"noPrivateImports": {
							"level": "error",
							"options": {
								"defaultVisibility": "public"
							}
						}
					}
				}
			}
		},
		{
			"includes": ["**/src/params/**"],
			"linter": {
				"rules": {
					"style": {
						"useFilenamingConvention": "off"
					}
				}
			}
		},
		{
			"includes": ["**/*.test.ts"],
			"linter": {
				"rules": {
					"correctness": {
						"noPrivateImports": {
							"level": "error",
							"options": {
								"defaultVisibility": "public"
							}
						}
					}
				}
			}
		}
	]
}
